blueprint:
  name: Multiple Entities Fault Notification
  description: >
    Performs scheduled fault checks on multiple entities and sends
    notification if any have been in fault state for a specified duration of time.
  domain: automation
  source_url: https://github.com/dennislwy/homeassistant-blueprints/blob/main/automation/notify_multiple_entites_fault.yaml
  author: Dennis Lee
  input:
    monitor_entities:
      name: Entities to monitor
      description: The entities to monitor for faults.
      selector:
        entity:
          filter:
            - domain: switch
            - domain: binary_sensor
            - domain: fan
            - domain: vacuum
            - domain: lock
            - domain: remote
          multiple: true
    notify_device:
      name: Device to notify
      description: Device needs to run the official Home Assistant app to receive notifications.
      selector:
        device:
          filter:
            integration: mobile_app
    trigger_time:
      name: Time to check
      description: The time of day to run the fault check.
      default: "9:00:00"
      selector:
        time: {}
    check_weekdays:
      name: Days to check
      description: Days of the week when the check should be performed.
      default:
        - mon
        - tue
        - wed
        - thu
        - fri
        - sat
        - sun
      selector:
        select:
          multiple: true
          mode: dropdown
          options:
            - label: Monday 
              value: mon
            - label: Tuesday
              value: tue
            - label: Wednesday
              value: wed
            - label: Thursday
              value: thu
            - label: Friday
              value: fri
            - label: Saturday
              value: sat
            - label: Sunday
              value: sun
    fault_states:
      name: Fault states
      description: >
        States which classify entities as being in fault. Notification will be triggered 
        if entity matches any of these states. You may enter custom states as well.
      default: 
        - unavailable
        - unknown
      selector:
        select:
          multiple: true
          mode: dropdown
          custom_value: true
          options:
            - label: 'Unavailable'
              value: 'unavailable'
            - label: 'Unknown'
              value: 'unknown'
            - label: 'On'
              value: 'on'
            - label: 'Off'
              value: 'off'
    fault_duration:
      name: Fault duration
      description: How long the entity in fault state before triggering notification.
      default: 
        hours: 1
      selector:
        duration: {}
    custom_message:
        name: Custom notification message
        description: >
          Optional. If provided, this message will be sent instead of the default.
          Use {entity} and {state} as a placeholder for the entity name and state.
        default: ""

variables:
  fault_states: !input fault_states
  custom_message: !input custom_message
  monitor_entities: !input monitor_entities
  fault_duration: !input fault_duration
  
trigger:
  - platform: time
    at: !input trigger_time
    
condition:
  - condition: time
    weekday: !input check_weekdays

action:
  - repeat:
      for_each: "{{ monitor_entities }}"
      sequence:
        - if:
            - condition: and
              conditions:
                - condition: template
                  value_template: >
                    {% set entity_id = repeat.item %}
                    {% set entity_state = states(entity_id) %}
                    {{ entity_state in fault_states }}
                - condition: template
                  value_template: >
                    {% set entity_id = repeat.item %}
                    {% set last_changed = states[entity_id].last_changed %}
                    {% set duration_seconds = fault_duration.get('days', 0) * 86400 + fault_duration.get('hours', 0) * 3600 + fault_duration.get('minutes', 0) * 60 + fault_duration.get('seconds', 0) %}
                    {{ (now() - last_changed).total_seconds() >= duration_seconds }}
          then:
            - variables:
                entity_name: "{{ state_attr(repeat.item, 'friendly_name') or repeat.item }}"
                entity_state: "{{ states(repeat.item) }}"
                notification_message: >
                  {% if custom_message | trim != '' %}
                    {{ custom_message.replace('{entity}', entity_name).replace('{state}', entity_state) }}
                  {% else %}
                    ðŸš¨{{ entity_name }} is {{ entity_state }}
                  {% endif %}
            - domain: mobile_app
              type: notify
              device_id: !input notify_device
              message: "{{ notification_message }}"

mode: single
